{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\weather_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StateSelector from './components/StateSelector';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleStateChange = async state => {\n    try {\n      const response = await fetch(`/api/weather/${state}`);\n\n      // Check if response is JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        throw new Error('Expected JSON response, got something else');\n      }\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n\n      // Validate that the data contains expected fields\n      if (typeof data.temperature !== 'number' || typeof data.chanceOfRain !== 'number') {\n        throw new Error('Received incomplete weather data');\n      }\n      setWeatherData(data);\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setWeatherData(null);\n      setError('Failed to fetch weather data. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(StateSelector, {\n      onStateChange: handleStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), !weatherData && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a state to see the weather information.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hyBnnJ0uX44fhLn3Cj8HjX61+/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StateSelector","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","error","setError","handleStateChange","state","response","fetch","contentType","headers","get","includes","Error","ok","data","json","temperature","chanceOfRain","console","className","children","onStateChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/weather_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport StateSelector from './components/StateSelector';\r\nimport WeatherDisplay from './components/WeatherDisplay';\r\nimport './styles.css';\r\n\r\nconst App = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleStateChange = async (state) => {\r\n    try {\r\n      const response = await fetch(`/api/weather/${state}`);\r\n\r\n      // Check if response is JSON\r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        throw new Error('Expected JSON response, got something else');\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Validate that the data contains expected fields\r\n      if (typeof data.temperature !== 'number' || typeof data.chanceOfRain !== 'number') {\r\n        throw new Error('Received incomplete weather data');\r\n      }\r\n\r\n      setWeatherData(data);\r\n      setError(null); // Clear any previous errors\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n      setWeatherData(null);\r\n      setError('Failed to fetch weather data. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <StateSelector onStateChange={handleStateChange} />\r\n      {error && <p>{error}</p>}\r\n      {weatherData && <WeatherDisplay data={weatherData} />}\r\n      {!weatherData && !error && <p>Select a state to see the weather information.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgBF,KAAK,EAAE,CAAC;;MAErD;MACA,MAAMG,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MACxD,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC7D,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAC/D;MAEA,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAID,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAME,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACA,IAAI,OAAOD,IAAI,CAACE,WAAW,KAAK,QAAQ,IAAI,OAAOF,IAAI,CAACG,YAAY,KAAK,QAAQ,EAAE;QACjF,MAAM,IAAIL,KAAK,CAAC,kCAAkC,CAAC;MACrD;MAEAX,cAAc,CAACa,IAAI,CAAC;MACpBX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDD,cAAc,CAAC,IAAI,CAAC;MACpBE,QAAQ,CAAC,uDAAuD,CAAC;IACnE;EACF,CAAC;EAED,oBACEN,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACH,aAAa;MAAC2B,aAAa,EAAEjB;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDvB,KAAK,iBAAIL,OAAA;MAAAuB,QAAA,EAAIlB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBzB,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACmB,IAAI,EAAEd;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpD,CAACzB,WAAW,IAAI,CAACE,KAAK,iBAAIL,OAAA;MAAAuB,QAAA,EAAG;IAA8C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}