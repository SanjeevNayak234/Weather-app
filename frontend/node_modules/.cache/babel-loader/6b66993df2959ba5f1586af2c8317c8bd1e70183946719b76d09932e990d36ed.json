{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\weather_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport StateSelector from './StateSelector'; // Import your state selector component\nimport WeatherDisplay from './WeatherDisplay'; // Import your weather display component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle state change and fetch weather data\n  const handleStateChange = async state => {\n    setLoading(true);\n    setError(null);\n    setWeatherData(null);\n    try {\n      const response = await axios.get(`/api/weather/${state}`);\n      setWeatherData(response.data);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Unable to fetch weather data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StateSelector, {\n      onChange: handleStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WQWoWmY12o4hu0My8QCp9zgXuLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","StateSelector","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","error","setError","loading","setLoading","handleStateChange","state","response","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/weather_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport StateSelector from './StateSelector'; // Import your state selector component\r\nimport WeatherDisplay from './WeatherDisplay'; // Import your weather display component\r\n\r\nconst App = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to handle state change and fetch weather data\r\n  const handleStateChange = async (state) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setWeatherData(null);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/weather/${state}`);\r\n      setWeatherData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching weather data:', err);\r\n      setError('Unable to fetch weather data. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Weather App</h1>\r\n      <StateSelector onChange={handleStateChange} />\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {weatherData && <WeatherDisplay data={weatherData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAC7C,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMc,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzCF,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACdF,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,gBAAgBF,KAAK,EAAE,CAAC;MACzDN,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,8BAA8B,EAAES,GAAG,CAAC;MAClDR,QAAQ,CAAC,uDAAuD,CAAC;IACnE,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA,CAACH,aAAa;MAACyB,QAAQ,EAAEb;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7Cd,OAAO,iBAAIP,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BhB,KAAK,iBAAIL,OAAA;MAAGuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDlB,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACe,IAAI,EAAEV;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}